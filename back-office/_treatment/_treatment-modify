

<?php
require "../../back-office/_includes/_dbCo.php";
$dtLb->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

session_start();
$_SESSION['myToken'] = md5(uniqid(mt_rand(), true));

if (isset($_GET['idDefunt'])) {

    $idDefunt = isset($_POST['idDefunt']) ? intval($_POST['idDefunt']) : null;
   
if (isset($_POST['update'])) {
    // Récupérer les données du formulaire
    $idDefunt = isset($_GET['idDefunt']) ? $_GET['idDefunt'] : null;
    $newName = strip_tags($_POST['new-name']);
    $newMainName = strip_tags($_POST['new-main-name']);
    $newMainLink = $_POST['new-main-link'];
    $newFamilyNames = $_POST['new-family-name'];
    $newFamilyLinks = $_POST['new-family-link'];
    $newDeathDate = $_POST['new-death-date'];
    $newAgeDeath = strip_tags($_POST['new-age-death']);
    $newCeremonyDate = $_POST['new-ceremony-date'];
    $newLocationCeremony = strip_tags($_POST['new-location_ceremony']);
    $newHourCeremony = $_POST['new-hour_ceremony'];
    $newDetails = strip_tags($_POST['new-details']);
    

    // Requête SQL pour mettre à jour le défunt
    $sqlDefunt = $dtLb->prepare("UPDATE defunt SET nom_prenom_defunt = :newName, date_deces = :newDeathDate, age = :newAgeDeath WHERE id_defunt = :idDefunt");
    $sqlDefunt->execute([
        'newName' => $newName,
        'newDeathDate' => $newDeathDate,
        'newAgeDeath' => $newAgeDeath,
        'idDefunt' => $idDefunt,
    ]);

    // Requête SQL pour mettre à jour le proche principal
    $sqlProchePrincipal = $dtLb->prepare("UPDATE main_family SET main_proche = :newMainName, main_link = :newMainLink WHERE id_defunt = :idDefunt");
    $sqlProchePrincipal->execute([
        'newMainName' => $newMainName,
        'newMainLink' => $newMainLink,
        'idDefunt' => $idDefunt,
    ]);

    // Supprimer les membres de la famille existants
    $sqlDeleteFamilyMembers = $dtLb->prepare("DELETE FROM proche WHERE id_defunt = :idDefunt");
    $sqlDeleteFamilyMembers->execute(['idDefunt' => $idDefunt]);
    $idDefunt = isset($_GET['idDefunt']) ? $_GET['idDefunt'] : null;

    // Réinsérer les membres de la famille mis à jour
    foreach ($newFamilyNames as $index => $newFamilyName) {
        $newFamilyLinkValue = $newFamilyLinks[$index];
        $sqlFamilyMember = $dtLb->prepare("INSERT INTO proche (nom_prenom_proche, lien_familial) VALUES (:newFamilyName, :newFamilyLink) WHERE id_defunt = :idDefunt");
        $sqlFamilyMember->execute([
            'newFamilyName' => $newFamilyName,
            'newFamilyLink' => $newFamilyLinkValue,
            'idDefunt' => $idDefunt,

        ]);
    }

    // Requête SQL pour mettre à jour la cérémonie
    $sqlCeremonie = $dtLb->prepare("UPDATE ceremonie SET date_ceremonie = :newCeremonyDate, heure_ceremonie = :newHourCeremony, lieu_ceremonie = :newLocationCeremony WHERE id_defunt = :idDefunt");
    $sqlCeremonie->execute([
        'newCeremonyDate' => $newCeremonyDate,
        'newHourCeremony' => $newHourCeremony,
        'newLocationCeremony' => $newLocationCeremony,
        'idDefunt' => $idDefunt,
    ]);

    // Requête SQL pour mettre à jour l'avis
    $sqlAvis = $dtLb->prepare("UPDATE avis SET avis_contenu = :newDetails WHERE id_defunt = :idDefunt");
    $sqlAvis->execute([
        'newDetails' => $newDetails,
        'idDefunt' => $idDefunt,
    ]);

    


    // Rediriger l'utilisateur après la mise à jour
//     header('Location: ./list-avis.php');
// exit();

}}

?>
